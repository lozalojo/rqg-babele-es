{"name":"Images Importer","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/sundries/books/book-leaves-circle.webp","scope":"global","command":"//\n// Images Importer (Generic) v1.3\n// by Viriato139ac\n//\n\n// functions\n\nasync function getFiles(target, extensions = ``, source = `user`) {\n  extensions = extensions instanceof Array ? extensions : [extensions];\n  let filePicker = await FilePicker.browse(source, target, { extensions });\n  if (filePicker.files) return [...filePicker.files];\n  return [];\n}\n\nfunction basename(str, sep) {\n  return str.substr(str.lastIndexOf(sep) + 1);\n}\n\nfunction strip_extension(str) {\n  return str.substr(0, str.lastIndexOf(\".\"));\n}\n\n// constants\n\nlet applyChanges = false;\n\nconst myDialogOptions = {\n  width: 640,\n  //height: 800,\n  //top: 500,\n  //left: 500\n};\n\nlet myFolders = game.folders;\nconst foldersList = myFolders.map((t) => ({\n  _id: t.id,\n  name: t.data.name,\n  select: `<option value=\"` + t.data.name + `\">` + t.data.name + `</option>`,\n}));\n//console.log(foldersList);\nlet optionsfoldersList = foldersList\n  .map(function (elem) {\n    return elem.select;\n  })\n  .join();\nconsole.log(optionsfoldersList);\n\n// form definition\n\nnew Dialog(\n  {\n    title: `Images Importer (Generic)`,\n    content: `\n  <script>\nfunction selectimagespath() {\n  const fp1 = new FilePicker({\n    type: \"folder\",\n    button: \"image-picker\",\n    callback: (url) => {\n      $(\"#imagespath\").val(url);\n    }\n  });\n  fp1.browse();\n}\n  </script>\n  <form>\n    <style type=\"text/css\">\n    .tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n    .tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:2px 2px;word-break:normal;}\n    .tg .tg-bzmm{background-color:#34696d;border-color:#ffffff;font-family:\"Courier New\", Courier, monospace !important;;text-align:left;vertical-align:middle}\n    .tg .tg-d6y8{border-color:#efefef;font-family:\"Courier New\", Courier, monospace !important;;text-align:left;vertical-align:middle}\n    .tg .tg-ly6r{border-color:#efefef;text-align:left;vertical-align:middle}\n    .tg .tg-r5a9{background-color:#34696d;border-color:#efefef;color:#ffffff;font-family:\"Courier New\", Courier, monospace !important;;text-align:left;vertical-align:middle}\n    .tg .tg-049l{background-color:#f0f0f0;border-color:#efefef;font-family:\"Courier New\", Courier, monospace !important;;font-size:12px;text-align:left;vertical-align:middle}  \n    </style>\n    <table class=\"tg\">\n    <tbody>\n      <tr>\n        <td class=\"tg-r5a9\" colspan=\"10\"><span style=\"color:#FFF\"><b>Select source folder and destination</b></span></td>\n      </tr>\n      <tr>\n        <td class=\"tg-d6y8\" colspan=\"2\">Source image's folder:</td>\n        <td class=\"tg-d6y8\" colspan=\"6\"><input type=\"text\" id=\"imagespath\" name=\"imagespath\" value=\"\"></td>\n        <td class=\"tg-d6y8\" colspan=\"2\"><button id=\"buttonimagespath\" onclick=\"selectimagespath()\" type=\"button\">${game.i18n.localize(\n          \"FILES.SelectFolder\"\n        )}</button></td>\n      </tr>\n      <tr>\n        <td class=\"tg-d6y8\" colspan=\"2\">Destination journal folder:</td>\n        <td class=\"tg-d6y8\" colspan=\"8\"><select id=\"journalfolder\" name=\"journalfolder\">${optionsfoldersList}</select></td>\n      </tr>\n      <tr>\n        <td class=\"tg-049l\" colspan=\"10\">\n\t\t\t\t<b>Source</b>: Folder where the images are stored (png, jpg and webp supported)</br>\n\t\t\t\t<b>Destination</b>: Journal folder to place images imported\n\t\t\t\t</td>\n      </tr>\n\n    </tbody>\n    </table>\n\n  </form>\n  `,\n    buttons: {\n      apply: {\n        icon: \"<i class='fas fa-check-circle'></i>\",\n        label: `Go!`,\n        callback: () => {\n          applyChanges = true;\n        },\n      },\n      cancel: {\n        icon: \"<i class='fas fa-times-circle'></i>\",\n        label: `Cancel`,\n        callback: () => {\n          applyChanges = false;\n        },\n      },\n    },\n    default: \"apply\",\n    close: async (html) => {\n      if (applyChanges) {\n        let imagespath = html.find('[name=\"imagespath\"]')[0].value || \"\";\n        let journalfolder = html.find('[name=\"journalfolder\"]')[0].value || \"\";\n\n        if (imagespath === \"\" || journalfolder === \"\") {\n          console.log(\"Error in paths or deck name\");\n        } else {\n          let imageFiles = await getFiles(\n            imagespath,\n            (extensions = [`.jpg`, `.jpeg`, `.png`, `.webp`])\n          );\n\n          let journalData = [];\n          const folder = game.folders.getName(journalfolder).id;\n\n          for (let file of imageFiles) {\n            const fileName = decodeURIComponent(\n              strip_extension(basename(file, \"/\"))\n            );\n            console.log(fileName);\n            journalData.push({ name: fileName, img: file, folder });\n          }\n          JournalEntry.createDocuments(journalData);\n        }\n      }\n    },\n  },\n  myDialogOptions\n).render(true);","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"core":{"sourceId":"Macro.naQs1QzWZrvmyOWB"},"exportSource":{"world":"pruebasrqg","system":"rqg","coreVersion":"9.241","systemVersion":"1.12.0"}},"_id":"0bOhl6hFFtbAoiNp"}
{"name":"Opposed Rolls","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/commodities/treasure/puzzle-box-glowing-blue.webp","scope":"global","command":"//\n// Opposed Rolls (RQG) v1.3\n// by Viriato139ac\n// thanks to Freeze#2689 for the conditional selection code\n\nfunction nivelexito(diceResult, skillLevel) {\n  let uc = Math.max(1, Math.round(skillLevel / 20));\n  let us = Math.max(1, Math.round(skillLevel / 5));\n  let uf = 95 + Math.min(4, Math.max(0, Math.ceil((skillLevel - 10) / 20)));\n  let ue = Math.min(skillLevel, uf);\n  let niveles = [uc, us, ue, uf];\n  //console.log(niveles);\n  let levelResult =\n    4 - niveles.reduce((a, b) => a + (diceResult <= b ? 1 : 0), 0);\n  //console.log(levelResult);\n  return levelResult;\n}\n\nconst lvlColours = [\"goldenrod\", \"blue\", \"green\", \"red\", \"darkred\"];\n// const lvlNames = [\"Critical\", \"Special\", \"Success\", \"Failure\", \"Fumble\"];\nconst lvlNames = [\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.2\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.3\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.4\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.5\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.6\")}`,\n];\n\n// const typeArray = [{ name: \"rune\" }, { name: \"skill\" }, { name: \"passion\" }];\n// const typeOptions = typeArray.reduce(\n//   (a, b) => (a += `<option value=\"${b.name}\">${b.name}</option>`),\n//   ``\n// );\n\nconst typeArray = [\n  { name: \"rune\", desc: `${game.i18n.localize(\"ITEM.TypeRune\")}` },\n  { name: \"skill\", desc: `${game.i18n.localize(\"ITEM.TypeSkill\")}` },\n  { name: \"passion\", desc: `${game.i18n.localize(\"ITEM.TypePassion\")}` },\n];\nconst typeOptions = typeArray.reduce(\n  (a, b) => (a += `<option value=\"${b.name}\">${b.desc}</option>`),\n  ``\n);\n\nconst activeOptions = Array.from(canvas.tokens.controlled).reduce(\n  (a, b) => (a += `<option value=\"${b.name}\">${b.name}</option>`),\n  ``\n);\n\nconst pasiveOptions = Array.from(game.user.targets).reduce(\n  (a, b) => (a += `<option value=\"${b.name}\">${b.name}</option>`),\n  ``\n);\n\nconst myDialogOptions = {\n  width: 640,\n  //height: 800,\n  //top: 500,\n  //left: 500\n};\n\nconst content = `\n  <form>\n  <table class=\"paleBlueRows\">\n  <thead>\n  <tr>\n  <th colspan=\"2\">${game.i18n.localize(\"RQG.scripts.general.select\")}</th>\n  <th colspan=\"2\">${game.i18n.localize(\"RQG.scripts.general.actor\")}</th>\n  <th colspan=\"2\">${game.i18n.localize(\"RQG.scripts.general.type\")}</th>\n  <th colspan=\"5\">${game.i18n.localize(\"RQG.scripts.general.ability\")}</th>\n  <th colspan=\"1\">${game.i18n.localize(\"RQG.scripts.general.modifier\")}</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td colspan=\"2\" style=\"font-weight: bold;\">${game.i18n.localize(\n    \"RQG.scripts.opposedRolls.active\"\n  )}:</td>\n  <td colspan=\"2\" style=\"font-weight: bold;\"><select name=\"activeActor\">${activeOptions}</select></td>\n  <td colspan=\"2\" style=\"font-weight: bold;\"><select name=\"activeType\">${typeOptions}</select></td>\n  <td colspan=\"5\"><select name=\"activeName\"></select></td>\n  <td colspan=\"1\"><input type=\"number\" id=\"activeMod\" name=\"activeMod\" value=0></td>\n  </tr>\n  <tr>\n  <td colspan=\"2\" style=\"font-weight: bold;\">${game.i18n.localize(\n    \"RQG.scripts.opposedRolls.pasive\"\n  )}:</td>\n  <td colspan=\"2\" style=\"font-weight: bold;\"><select name=\"pasiveActor\">${pasiveOptions}</select></td>\n  <td colspan=\"2\" style=\"font-weight: bold;\"><select name=\"pasiveType\">${typeOptions}</select></td>\n  <td colspan=\"5\"><select name=\"pasiveName\"></select></td>\n  <td colspan=\"1\"><input type=\"number\" id=\"pasiveMod\" name=\"pasiveMod\" value=0></td>\n  </tr>\n  </tbody>\n  </table>\n  </form>`;\n\nopposedRolls();\n\nfunction opposedRolls() {\n  // let noactors = 0;\n  // for (var a of game.actors) noactors++;\n  // if (noactors < 1) {\n  //   ui.notifications.error(`${game.i18n.localize(\"RQG.scripts.general.erroractor\")}`);\n  //   return;\n  // }\n  if (canvas.tokens.controlled.length === 0) {\n    ui.notifications.error(\n      `${game.i18n.localize(\"RQG.scripts.general.errorselect\")}`\n    );\n    return;\n  }\n  const targets = Array.from(game.user.targets);\n  if (targets.length === 0) {\n    ui.notifications.error(\n      `${game.i18n.localize(\"RQG.scripts.general.errortarget\")}`\n    );\n    return;\n  }\n\n  new Dialog(\n    {\n      title: `${game.i18n.localize(\"RQG.scripts.augmentingAbilities.title\")}`,\n      content,\n      buttons: {\n        roll: {\n          label: `${game.i18n.localize(\"RQG.scripts.general.roll\")}`,\n          callback: async (html) => {\n            const activeName = html.find(`[name=\"activeName\"]`).val();\n            const activeActor = html.find(`[name=\"activeActor\"]`).val();\n            const activeToRoll = game.actors\n              .getName(activeActor)\n              .data.items.find((i) => i.name === activeName);\n            const activeMod = html.find(`[name=\"activeMod\"]`).val();\n\n            let activeBase;\n            activeToRoll.data.type === \"skill\"\n              ? (activeBase =\n                  activeToRoll.data.data.learnedChance +\n                  game.actors.getName(activeActor).data.data\n                    .skillCategoryModifiers[activeToRoll.data.data.category])\n              : (activeBase = activeToRoll.data.data.chance);\n            let activeValue = Math.max(1, activeBase * 1 + activeMod * 1);\n            console.log(activeBase);\n            let activeRoll = new Roll(\"1d100\");\n            activeRoll.roll();\n            let activeResult = nivelexito(activeRoll.result, activeValue);\n            console.log(\n              \"active: Rolled \" +\n                activeRoll.result +\n                \" on \" +\n                activeValue +\n                \" Result: \" +\n                lvlNames[activeResult]\n            );\n\n            const pasiveName = html.find(`[name=\"pasiveName\"]`).val();\n            const pasiveActor = html.find(`[name=\"pasiveActor\"]`).val();\n            const pasiveToRoll = game.actors\n              .getName(pasiveActor)\n              .data.items.find((i) => i.name === pasiveName);\n            const pasiveMod = html.find(`[name=\"pasiveMod\"]`).val();\n\n            let pasiveBase;\n            pasiveToRoll.data.type === \"skill\"\n              ? (pasiveBase =\n                  pasiveToRoll.data.data.learnedChance +\n                  game.actors.getName(activeActor).data.data\n                    .skillCategoryModifiers[pasiveToRoll.data.data.category])\n              : (pasiveBase = pasiveToRoll.data.data.chance);\n            let pasiveValue = Math.max(1, pasiveBase * 1 + pasiveMod * 1);\n            console.log(pasiveBase);\n            let pasiveRoll = new Roll(\"1d100\");\n            pasiveRoll.roll();\n            let pasiveResult = nivelexito(pasiveRoll.result, pasiveValue);\n            console.log(\n              \"pasive: Rolled \" +\n                pasiveRoll.result +\n                \" on \" +\n                pasiveValue +\n                \" Result: \" +\n                lvlNames[pasiveResult]\n            );\n\n            let activeLabel =\n              `<span style=\"font-weight: bold; color:` +\n              lvlColours[activeResult] +\n              `;\">` +\n              lvlNames[activeResult] +\n              `</span>`;\n            let pasiveLabel =\n              `<span style=\"font-weight: bold; color:` +\n              lvlColours[pasiveResult] +\n              `;\">` +\n              lvlNames[pasiveResult] +\n              `</span>`;\n\n            let activefinalLabel;\n            let pasivefinalLabel;\n            if (activeResult < 3 && activeResult < pasiveResult) {\n              activefinalLabel = `<span style=\"font-weight: bold; color:green;\">${game.i18n.format(\n                \"RQG.scripts.opposedRolls.winner\"\n              )}</span>`;\n              pasivefinalLabel = `<span style=\"font-weight: bold; color:darkred;\">${game.i18n.format(\n                \"RQG.scripts.opposedRolls.loser\"\n              )}</span>`;\n            } else if (pasiveResult < 3 && pasiveResult < activeResult) {\n              pasivefinalLabel = `<span style=\"font-weight: bold; color:green;\">${game.i18n.format(\n                \"RQG.scripts.opposedRolls.winner\"\n              )}</span>`;\n              activefinalLabel = `<span style=\"font-weight: bold; color:darkred;\">${game.i18n.format(\n                \"RQG.scripts.opposedRolls.loser\"\n              )}</span>`;\n            } else if (activeResult >= 3 && pasiveResult >= 3) {\n              pasivefinalLabel = `<span style=\"font-weight: bold; color:orange;\">${game.i18n.format(\n                \"RQG.scripts.opposedRolls.tie\"\n              )}</span>`;\n              activefinalLabel = `<span style=\"font-weight: bold; color:orange;\">${game.i18n.format(\n                \"RQG.scripts.opposedRolls.tie\"\n              )}</span>`;\n            } else if (activeResult === pasiveResult) {\n              if (activeRoll.result < pasiveRoll.result) {\n                pasivefinalLabel = `<span style=\"font-weight: bold; color:green;\">${game.i18n.format(\n                  \"RQG.scripts.opposedRolls.winner\"\n                )}</span>`;\n                activefinalLabel = `<span style=\"font-weight: bold; color:darkred;\">${game.i18n.format(\n                  \"RQG.scripts.opposedRolls.loser\"\n                )}</span>`;\n              } else if (activeRoll.result > pasiveRoll.result) {\n                activefinalLabel = `<span style=\"font-weight: bold; color:green;\">${game.i18n.format(\n                  \"RQG.scripts.opposedRolls.winner\"\n                )}</span>`;\n                pasivefinalLabel = `<span style=\"font-weight: bold; color:darkred;\">${game.i18n.format(\n                  \"RQG.scripts.opposedRolls.loser\"\n                )}</span>`;\n              } else {\n                pasivefinalLabel = `<span style=\"font-weight: bold; color:orange;\">${game.i18n.format(\n                  \"RQG.scripts.opposedRolls.tie\"\n                )}</span>`;\n                activefinalLabel = `<span style=\"font-weight: bold; color:orange;\">${game.i18n.format(\n                  \"RQG.scripts.opposedRolls.tie\"\n                )}</span>`;\n              }\n            } else {\n              pasivefinalLabel = `<span style=\"font-weight: bold; color:blue;\">ERROR</span>`;\n              activefinalLabel = `<span style=\"font-weight: bold; color:blue;\">ERROR</span>`;\n            }\n            let activeFlavour = `${game.i18n.format(\n              \"RQG.scripts.opposedRolls.activeFlavour\",\n              {\n                activeName: activeName,\n                activeBase: activeBase,\n                pasiveName: pasiveName,\n                pasiveBase: pasiveBase,\n              }\n            )}`;\n            // let activeFlavour = `Opposed test, active ability: <span style=\"font-weight: bold;color: brown\">${activeName} (${activeBase}%)</span> versus pasive ability <span style=\"font-weight: bold;color: brown\">${pasiveName} (${pasiveBase}%)</span>`;\n            let activeString = `<table>\n            <tr>\n                <th></th>\n                <th>Base</th>\n                <th>Mod</th>\n                <th>Roll (%)</th>\n                <th>Result</th> \n            </tr>\n            <tr>\n            <td style=\"font-weight: bold;\">${activeActor}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${activeBase}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${activeMod}</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${activeRoll.result} (${activeValue})</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${activeLabel}</td>\n            </tr>\n            <tr>\n            <td style=\"font-weight: bold;\">${pasiveActor}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${pasiveBase}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${pasiveMod}</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${pasiveRoll.result} (${pasiveValue})</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${pasiveLabel}</td>\n            </tr>\n            </table>`;\n            activeRoll.toMessage({\n              user: game.user.id,\n              speaker: ChatMessage.getSpeaker(),\n              flavor: activeFlavour,\n              content: activeString,\n            });\n            let pasiveFlavour = `${game.i18n.format(\n              \"RQG.scripts.opposedRolls.pasiveFlavour\",\n              {\n                activeName: activeName,\n                activeBase: activeBase,\n                pasiveName: pasiveName,\n                pasiveBase: pasiveBase,\n              }\n            )}`;\n            // let pasiveFlavour = `Results: <span style=\"font-weight: bold;color: brown\">${activeName} (${activeBase}%)</span> versus <span style=\"font-weight: bold;color: brown\">${pasiveName} (${pasiveBase}%)</span>`;\n            let pasiveString = `<table>\n            <tr>\n                <th></th>\n                <th>Roll</th>\n                <th>%</th>\n                <th>Result</th> \n            </tr>\n            <tr>\n            <td style=\"font-weight: bold;\">${activeActor}</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${activeRoll.result}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${activeValue}</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${activefinalLabel}</td>\n            </tr>\n            <tr>\n            <td style=\"font-weight: bold;\">${pasiveActor}</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${pasiveRoll.result}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${pasiveValue}</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${pasivefinalLabel}</td>\n            </tr>\n            </table>`;\n\n            pasiveRoll.toMessage({\n              user: game.user.id,\n              speaker: ChatMessage.getSpeaker(),\n              flavor: pasiveFlavour,\n              content: pasiveString,\n            });\n          },\n        },\n        cancel: {\n          label: `${game.i18n.localize(\"RQG.scripts.general.cancel\")}`,\n          callback: (html) => console.log(\"Cancelled\"),\n        },\n      },\n      default: \"roll\",\n    },\n    myDialogOptions\n  ).render(true);\n}\n\nawait new Promise((resolve) => setTimeout(resolve, 250));\n$(document).ready(function () {\n  const firstactiveOptions = game.actors\n    .getName($(\"select[name=activeActor]\")[0].value)\n    .data.items.filter(\n      (skill) => skill.type === $(\"select[name=activeType]\")[0].value\n    )\n    .reduce(\n      (acc, e) => (acc += `<option value=\"${e.name}\">${e.name}</option>`),\n      ``\n    );\n  $(\"select[name=activeName]\").append(firstactiveOptions);\n  $(\"select[name=activeType]\").change(function () {\n    const newactiveOptions = game.actors\n      .getName($(\"select[name=activeActor]\")[0].value)\n      .data.items.filter(\n        (skill) => skill.type === $(\"select[name=activeType]\")[0].value\n      )\n      .reduce(\n        (acc, e) => (acc += `<option value=\"${e.name}\">${e.name}</option>`),\n        ``\n      );\n    $(\"select[name=activeName]\").empty();\n    $(\"select[name=activeName]\").append(newactiveOptions);\n  });\n  const firstpasiveOptions = game.actors\n    .getName($(\"select[name=pasiveActor]\")[0].value)\n    .data.items.filter(\n      (skill) => skill.type === $(\"select[name=pasiveType]\")[0].value\n    )\n    .reduce(\n      (acc, e) => (acc += `<option value=\"${e.name}\">${e.name}</option>`),\n      ``\n    );\n  $(\"select[name=pasiveName]\").append(firstpasiveOptions);\n  $(\"select[name=pasiveType]\").change(function () {\n    const newpasiveOptions = game.actors\n      .getName($(\"select[name=pasiveActor]\")[0].value)\n      .data.items.filter(\n        (skill) => skill.type === $(\"select[name=pasiveType]\")[0].value\n      )\n      .reduce(\n        (acc, e) => (acc += `<option value=\"${e.name}\">${e.name}</option>`),\n        ``\n      );\n    $(\"select[name=pasiveName]\").empty();\n    $(\"select[name=pasiveName]\").append(newpasiveOptions);\n  });\n});","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"exportSource":{"world":"torre-quebrada","system":"rqg","coreVersion":"9.242","systemVersion":"1.12.0"},"core":{"sourceId":"Macro.ErLhPt0ZCnDUZ80J"}},"_id":"8aQax2fregvNxDOb"}
{"name":"Hit Location Rolls","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/skills/targeting/crosshair-triple-strike-orange.webp","scope":"global","command":"//\n// Hit Location Rolls (RQG) v1.3\n// by Viriato139ac\n\nconst myDialogOptions = {\n  width: 640,\n  //height: 800,\n  //top: 500,\n  //left: 500\n};\n\nhitlocationRolls();\n\nfunction hitlocationRolls() {\n  const targets = Array.from(game.user.targets);\n\n  if (targets.length === 0) {\n    ui.notifications.error(\n      `${game.i18n.localize(\"RQG.scripts.general.errortarget\")}`\n    );\n    return;\n  }\n\n  targets.forEach((myTarget) => {\n    const locItems = game.actors\n      .getName(myTarget.name)\n      .data.items.filter((skill) => skill.type === \"hitLocation\");\n\n    let locTable = [];\n    locItems.forEach((loc) => {\n      locTable.push({\n        name: loc.name,\n        dieFrom: loc.data.data.dieFrom,\n        dieTo: loc.data.data.dieTo,\n      });\n    });\n    locTable.sort((a, b) =>\n      a.dieTo > b.dieTo ? 1 : b.dieTo > a.dieTo ? -1 : 0\n    );\n\n    let baseString = [\n      `${game.i18n.localize(\n        \"RQG.scripts.hitlocationRolls.baseString\"\n      )} <span style=\"font-weight: bold;color: brown\">${\n        myTarget.name\n      }</span><hr><table>\n    <tr>\n        <th style=\"text-align: left; vertical-align: middle;\">${game.i18n.localize(\n          \"RQG.scripts.hitlocationRolls.hitlocation\"\n        )}</th>\n        <th style=\"text-align: center; vertical-align: middle;\">From</th>\n        <th style=\"text-align: center; vertical-align: middle;\">To</th> \n    </tr>`,\n    ];\n    locTable.forEach((a) => {\n      baseString.push([\n        `\n        <tr>\n        <td style=\"text-align: left; vertical-align: middle;\">` +\n          a.name +\n          `</td>\n        <td style=\"text-align: center; vertical-align: middle;\">` +\n          a.dieFrom +\n          `</td>\n        <td style=\"text-align: center; vertical-align: middle;\">` +\n          a.dieTo +\n          `</td>\n    </tr>\n        `,\n      ]);\n    });\n    baseString.push(`</table>`);\n\n    const content = baseString.join(\"\");\n\n    new Dialog(\n      {\n        title: `${game.i18n.localize(\"RQG.scripts.hitlocationRolls.title\")}`,\n        content,\n        buttons: {\n          roll: {\n            label: `${game.i18n.localize(\"RQG.scripts.general.roll\")}`,\n            callback: async (html) => {\n              const formRoll =\n                \"1d\" + Math.max(...locTable.map((o) => o.dieTo), 0);\n              // console.log(formRoll)\n              let skillRoll = await new Roll(formRoll);\n              skillRoll.roll();\n              // console.log(skillRoll.result);\n              locResult =\n                1 *\n                locTable.reduce(\n                  (a, b) => a + (skillRoll.result > b.dieTo ? 1 : 0),\n                  0\n                );\n\n              // console.log(locResult);\n              // console.log();\n              let contentFlavour = `${game.i18n.format(\n                \"RQG.scripts.hitlocationRolls.contentFlavour\",\n                {\n                  formRoll: formRoll,\n                }\n              )}`;\n              // let contentFlavour = `Rolling ${formRoll} for localization.`;\n              let contentString =\n                content +\n                `${game.i18n.format(\n                  \"RQG.scripts.hitlocationRolls.contentString\",\n                  {\n                    skillRoll: skillRoll.result,\n                    locTable: locTable[locResult].name,\n                  }\n                )}`;\n\n              // let contentString =\n              //   content +\n              //   `<hr>Rolled a <span style=\"font-weight: bold;color: green\">${skillRoll.result}</span>, a hit at the <span style=\"font-weight: bold;color: brown\">${locTable[locResult].name}</span>`;\n              skillRoll.toMessage({\n                user: game.user.id,\n                speaker: ChatMessage.getSpeaker(),\n                flavor: contentFlavour,\n                content: contentString,\n              });\n            },\n          },\n          cancel: {\n            label: `${game.i18n.localize(\"RQG.scripts.general.cancel\")}`,\n            callback: (html) => console.log(\"Cancelled\"),\n          },\n        },\n        default: \"roll\",\n      },\n      myDialogOptions\n    ).render(true);\n  });\n}","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"exportSource":{"world":"torre-quebrada","system":"rqg","coreVersion":"9.242","systemVersion":"1.12.0"},"core":{"sourceId":"Macro.MTxLE811rO79NEqX"}},"_id":"KAJRx3qVnZC7wnPA"}
{"name":"Resistance Table","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/skills/social/diplomacy-handshake-yellow.webp","scope":"global","command":"//\n// Resistance Table (RQG) v1.2\n// by Viriato139ac\n// thanks to Freeze#2689 for the conditional selection code\n\nfunction nivelexito(diceResult, skillLevel) {\n  let uc = Math.max(1, Math.round(skillLevel / 20));\n  let us = Math.max(1, Math.round(skillLevel / 5));\n  let uf = 95 + Math.min(4, Math.max(0, Math.ceil((skillLevel - 10) / 20)));\n  let ue = Math.min(skillLevel, uf);\n  let niveles = [uc, us, ue, uf];\n  //console.log(niveles);\n  let levelResult =\n    4 - niveles.reduce((a, b) => a + (diceResult <= b ? 1 : 0), 0);\n  //console.log(levelResult);\n  return levelResult;\n}\n\nconst lvlColours = [\"goldenrod\", \"blue\", \"green\", \"red\", \"darkred\"];\n// const lvlNames = [\"Critical\", \"Special\", \"Success\", \"Failure\", \"Fumble\"];\nconst lvlNames = [\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.2\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.3\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.4\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.5\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.6\")}`,\n];\nconst characteristics = {\n  strength: `${game.i18n.localize(\"RQG.Actor.Characteristics.strength-full\")}`,\n  constitution: `${game.i18n.localize(\n    \"RQG.Actor.Characteristics.constitution-full\"\n  )}`,\n  size: `${game.i18n.localize(\"RQG.Actor.Characteristics.size-full\")}`,\n  dexterity: `${game.i18n.localize(\n    \"RQG.Actor.Characteristics.dexterity-full\"\n  )}`,\n  intelligence: `${game.i18n.localize(\n    \"RQG.Actor.Characteristics.intelligence-full\"\n  )}`,\n  power: `${game.i18n.localize(\"RQG.Actor.Characteristics.power-full\")}`,\n  charisma: `${game.i18n.localize(\"RQG.Actor.Characteristics.charisma-full\")}`,\n};\nconst myDialogOptions = {\n  width: 640,\n  //height: 800,\n  //top: 500,\n  //left: 500\n};\n\nresistanceTable();\n\nfunction resistanceTable() {\n  if (canvas.tokens.controlled.length === 0) {\n    ui.notifications.error(\n      `${game.i18n.localize(\"RQG.scripts.general.errortarget\")}`\n    );\n    return;\n  }\n\n  // const charOptions = Object.getOwnPropertyNames(\n  //   token.actor.data.data.characteristics\n  // ).reduce((a, b) => (a += `<option value=\"${b}\">${b}</option>`), ``);\n  const charOptions = Object.getOwnPropertyNames(\n    token.actor.data.data.characteristics\n  ).reduce(\n    (a, b) =>\n      (a += `<option value=\"${b}\">` + characteristics[`${b}`] + `</option>`),\n    ``\n  );\n\n  const content = `\n  <form>\n  <table class=\"paleBlueRows\">\n  <thead>\n  <tr>\n  <th colspan=\"2\"></th>\n  <th colspan=\"3\">${game.i18n.localize(\n    \"RQG.scripts.general.characteristic\"\n  )}</th>\n  <th colspan=\"1\">${game.i18n.localize(\"RQG.scripts.general.value\")}</th>\n  <th colspan=\"1\">${game.i18n.localize(\n    \"RQG.scripts.resistanceTable.target\"\n  )}</th>\n  <th colspan=\"1\">${game.i18n.localize(\"RQG.scripts.general.modifier\")}</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td colspan=\"2\" style=\"font-weight: bold;\">${game.i18n.localize(\n    \"RQG.scripts.general.charac\"\n  )}:</td>\n  <td colspan=\"3\" style=\"font-weight: bold;\"><select name=\"charNam\">${charOptions}</select></td>\n  <td colspan=\"1\"><input type=\"number\" id=\"charVal\" name=\"charVal\" value=0></td>\n  <td colspan=\"1\"><input type=\"number\" id=\"charTar\" name=\"charTar\" value=10></td>\n  <td colspan=\"1\"><input type=\"number\" id=\"charMod\" name=\"charMod\" value=0></td>\n  </tr>\n  </tbody>\n  </table>\n  </form>`;\n\n  new Dialog(\n    {\n      title: `${game.i18n.localize(\"RQG.scripts.resistanceTable.title\")}`,\n      content,\n      buttons: {\n        play: {\n          label: \"Roll\",\n          callback: async (html) => {\n            const charNam = html.find(`[name=\"charNam\"]`).val();\n            const charVal = html.find(`[name=\"charVal\"]`).val();\n            const charMod = html.find(`[name=\"charMod\"]`).val();\n            const charTar = html.find(`[name=\"charTar\"]`).val();\n\n            let charValue = Math.max(\n              1,\n              50 + (charVal * 1 - charTar * 1) * 5 + charMod * 1\n            );\n            let charRoll = new Roll(\"1d100\");\n            charRoll.roll();\n            let charResult = nivelexito(charRoll.result, charValue);\n\n            console.log(\n              \"char: Rolled \" +\n                charRoll.result +\n                \" on \" +\n                charValue +\n                \" Result: \" +\n                lvlNames[charResult]\n            );\n\n            let charLabel =\n              `<span style=\"font-weight: bold; color:` +\n              lvlColours[charResult] +\n              `;\">` +\n              lvlNames[charResult] +\n              `</span>`;\n\n            let flavourString = `${game.i18n.format(\n              \"RQG.scripts.resistanceTable.flavourString\",\n              {\n                charNam: characteristics[`${charNam}`],\n                charVal: charVal,\n                charTar: charTar,\n                charRoll: charRoll.result,\n                charValue: charValue,\n                charLabel: charLabel,\n              }\n            )}`;\n            // let flavourString = `Rolling <span style=\"font-weight: bold;color: brown\">${charNam} (${charVal})</span> against a target number of <span style=\"font-weight: bold;color: brown\">${charTar}</span>. Rolled ${charRoll.result}% on a modified probability of ${charValue}%, a ${charLabel}`;\n            let contentString = `<table>\n            <tr>\n                <th>${game.i18n.localize(\"RQG.scripts.general.value\")}</th>\n                <th>${game.i18n.localize(\n                  \"RQG.scripts.resistanceTable.target\"\n                )}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.mod\")}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.rollp\")}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.result\")}</th> \n            </tr>\n            <tr>\n            <td style=\"text-align: center; vertical-align: middle;\">${charVal}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${charTar}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${charMod}</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${\n              charRoll.result\n            } (${charValue})</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${charLabel}</td>\n            </tr>\n            </table>`;\n\n            charRoll.toMessage({\n              user: game.user.id,\n              speaker: ChatMessage.getSpeaker(),\n              //flavor: `Augmenting ${skillName} (${skillBase}%) with ${augName} (${augBase}%). Rolled ${skillRoll.result}% on a modified skill of ${skillValue}%, a ${lvlNames[skillResult]}`,\n              flavor: flavourString,\n              content: contentString,\n            });\n          },\n        },\n        cancel: {\n          label: \"Cancel\",\n          callback: (html) => console.log(\"Cancelled\"),\n        },\n      },\n      default: \"one\",\n    },\n    myDialogOptions\n  ).render(true);\n}\n\nawait new Promise((resolve) => setTimeout(resolve, 250));\n$(document).ready(function () {\n  const firstcharOptions =\n    token.actor.data.data.characteristics[$(\"select[name=charNam]\")[0].value]\n      .value;\n  console.log(\n    \"R: \" + $(\"select[name=charNam]\")[0].value + \": \" + firstcharOptions\n  );\n  $(\"input[name=charVal]\").val(firstcharOptions);\n  $(\"select[name=charNam]\").change(function () {\n    const newcharOptions =\n      token.actor.data.data.characteristics[$(\"select[name=charNam]\")[0].value]\n        .value;\n    console.log(\n      \"C: \" + $(\"select[name=charNam]\")[0].value + \": \" + newcharOptions\n    );\n    $(\"input[name=charVal]\").val(newcharOptions);\n  });\n});","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"core":{"sourceId":"Macro.fa1dI1iE4cU5f2cM"},"exportSource":{"world":"pruebasrqg","system":"rqg","coreVersion":"9.242","systemVersion":"1.12.0"}},"_id":"QXtf5sDmPeNIyqGv"}
{"name":"Deck Creator","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/sundries/gaming/playing-cards.webp","scope":"global","command":"//\n// Deck Creator (Generic) v1.2\n// by Viriato139ac\n// based on previous code by @Skimble#8601\n\n// Texts of the form\n\nconst labeltitle = \"Deck Creator (Generic)\";\nconst labelapply = \"Import\";\nconst labelcancel = \"Cancel\";\nconst labelcardsDefinition = \"Deck definition\";\nconst labelfacespath = \"Face images directory\";\nconst labelbackspath = \"Back images directory\";\nconst labeldeckback = \"Deck's back image\";\nconst labeldeckname = \"Deck name\";\nconst labelnameback = \"Back card name\";\nconst labelcardtype = \"Card type\";\nconst labelfacespathHint = \"Path where the images for faces are stored\";\nconst labelbackspathHint =\n  \"Path where back images are stored. The images are cycled to the length of the faces images. If you specify a directory where there is only one image, the image is used for al faces, if there are as many as faces, backs will match each face in the same order\";\nconst labeldeckbackHint =\n  \"Back image of the deck (it will change current back image of the deck)\";\nconst labeldecknameHint =\n  \"Name of the deck to insert the cards. Must be created in advance\";\nconst labelnamebackHint =\n  \"Text that is used for back of the card. It is not generally used\";\nconst labelcardtypeHint = \"Type of the cards in the deck\";\nconst labelnamebackexample = \"Back card\";\nconst TypeBase = \"Base\";\nconst TypeDestiny = \"Destiny\";\nconst TypeDrama = \"Drama\";\nconst TypeCosm = \"Cosm\";\n\n// functions\n\nfunction repeat(arr, toLength) {\n  let output = [...arr];\n  while (output.length < toLength) output = [...output, ...arr];\n  return output.slice(0, toLength);\n}\n\nasync function getFiles(target, extensions = ``, source = `user`) {\n  extensions = extensions instanceof Array ? extensions : [extensions];\n  let filePicker = await FilePicker.browse(source, target, { extensions });\n  if (filePicker.files) return [...filePicker.files];\n  return [];\n}\n\nfunction basename(str, sep) {\n  return str.substr(str.lastIndexOf(sep) + 1);\n}\n\nfunction strip_extension(str) {\n  return str.substr(0, str.lastIndexOf(\".\"));\n}\n\n// constants\n\nlet applyChanges = false;\n\nconst myDialogOptions = {\n  width: 640,\n  //height: 800,\n  //top: 500,\n  //left: 500\n};\n\nlet myCards = game.cards;\nconst cardsList = myCards.map((t) => ({\n  _id: t.id,\n  name: t.data.name,\n  type: t.data.type,\n  select: `<option value=\"` + t.data.name + `\">` + t.data.name + `</option>`,\n}));\n//console.log(cardsList);\nlet decksList = cardsList.filter((t) => t.type === \"deck\");\nlet optionsdecksList = decksList\n  .map(function (elem) {\n    return elem.select;\n  })\n  .join();\n//console.log(optionsdecksList);\n\nlet myTypes = [`<option value=\"base\">` + TypeBase + `</option>`];\nif (game.system.id === \"torgeternity\") {\n  myTypes.push(`<option value=\"destiny\">` + TypeDestiny + `</option>`);\n  myTypes.push(`<option value=\"drama\">` + TypeDrama + `</option>`);\n  myTypes.push(`<option value=\"cosm\">` + TypeCosm + `</option>`);\n}\nlet optionstypesList = myTypes.join();\n//console.log(optionstypesList);\n\n// form definition\n\nnew Dialog(\n  {\n    title: labeltitle,\n    content: `\n  <script>\nfunction selectfacespath() {\n  const fp1 = new FilePicker({\n    type: \"folder\",\n    button: \"image-picker\",\n    callback: (url) => {\n      $(\"#facespath\").val(url);\n    }\n  });\n  fp1.browse();\n}\n  </script>\n  <script>\nfunction selectbackspath() {\n  const fp1 = new FilePicker({\n    type: \"folder\",\n    button: \"image-picker\",\n    callback: (url) => {\n      $(\"#backspath\").val(url);\n    }\n  });\n  fp1.browse();\n}\n  </script>\n  <script>\nfunction selectdeckback() {\n  const fp1 = new FilePicker({\n    type: \"image\",\n    button: \"image-picker\",\n    callback: (url) => {\n      $(\"#deckback\").val(url);\n    }\n  });\n  fp1.browse();\n}\n  </script>\t\n  <form>\n    <style type=\"text/css\">\n    .tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n    .tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:2px 2px;word-break:normal;}\n    .tg .tg-bzmm{background-color:#34696d;border-color:#ffffff;font-family:\"Courier New\", Courier, monospace !important;;text-align:left;vertical-align:middle}\n    .tg .tg-d6y8{border-color:#efefef;font-family:\"Courier New\", Courier, monospace !important;;text-align:left;vertical-align:middle}\n    .tg .tg-ly6r{border-color:#efefef;text-align:left;vertical-align:middle}\n    .tg .tg-r5a9{background-color:#34696d;border-color:#efefef;color:#ffffff;font-family:\"Courier New\", Courier, monospace !important;;text-align:left;vertical-align:middle}\n    .tg .tg-049l{background-color:#f0f0f0;border-color:#efefef;font-family:\"Courier New\", Courier, monospace !important;;font-size:12px;text-align:left;vertical-align:middle}  \n    </style>\n    <table class=\"tg\">\n    <tbody>\n      <tr>\n        <td class=\"tg-r5a9\" colspan=\"10\"><span style=\"color:#FFF\"><b>${labelcardsDefinition}</b></span></td>\n      </tr>\n      <tr>\n        <td class=\"tg-d6y8\" colspan=\"2\">${labelfacespath}:</td>\n        <td class=\"tg-d6y8\" colspan=\"6\"><input type=\"text\" id=\"facespath\" name=\"facespath\" value=\"\"></td>\n        <td class=\"tg-d6y8\" colspan=\"2\"><button id=\"buttonfacespath\" onclick=\"selectfacespath()\" type=\"button\">${game.i18n.localize(\n          \"FILES.SelectFolder\"\n        )}</button></td>\n      </tr>\n      <tr>\n        <td class=\"tg-d6y8\" colspan=\"2\">${labelbackspath}:</td>\n        <td class=\"tg-d6y8\" colspan=\"6\"><input type=\"text\" id=\"backspath\" name=\"backspath\" value=\"\"></td>\n        <td class=\"tg-d6y8\" colspan=\"2\"><button id=\"buttonbackspath\" onclick=\"selectbackspath()\" type=\"button\">${game.i18n.localize(\n          \"FILES.SelectFolder\"\n        )}</button></td>\n      </tr>\n      <tr>\n        <td class=\"tg-d6y8\" colspan=\"2\">${labeldeckback}:</td>\n        <td class=\"tg-d6y8\" colspan=\"6\"><input type=\"text\" id=\"deckback\" name=\"deckback\" value=\"\"></td>\n        <td class=\"tg-d6y8\" colspan=\"2\"><button id=\"buttondeckback\" onclick=\"selectdeckback()\" type=\"button\">${game.i18n.localize(\n          \"FILES.SelectFile\"\n        )}</button></td>\n      </tr>\n      <tr>\n        <td class=\"tg-d6y8\" colspan=\"2\">${labeldeckname}:</td>\n        <td class=\"tg-d6y8\" colspan=\"8\"><select id=\"deckname\" name=\"deckname\">${optionsdecksList}</select></td>\n      </tr>\n      <tr>\n        <td class=\"tg-d6y8\" colspan=\"2\">${labelcardtype}:</td>\n        <td class=\"tg-d6y8\" colspan=\"8\"><select id=\"cardtype\" name=\"cardtype\">${optionstypesList}</select></td>\n      </tr>\n      <tr>\n        <td class=\"tg-d6y8\" colspan=\"2\">${labelnameback}:</td>\n        <td class=\"tg-d6y8\" colspan=\"8\"><input type=\"text\" id=\"nameback\" name=\"nameback\" value=\"${labelnamebackexample}\"></td>\n      </tr>\n      <tr>\n        <td class=\"tg-049l\" colspan=\"10\">\n\t\t\t\t<b>${labelfacespath}</b>: ${labelfacespathHint}</br>\n\t\t\t\t<b>${labelbackspath}</b>: ${labelbackspathHint}</br>\n\t\t\t\t<b>${labeldeckback}</b>: ${labeldeckbackHint}</br>\n\t\t\t\t<b>${labeldeckname}</b>: ${labeldecknameHint}</br>\n\t\t\t\t<b>${labelcardtype}</b>: ${labelcardtypeHint}</br>\n\t\t\t\t<b>${labelnameback}</b>: ${labelnamebackHint}\n\t\t\t\t</td>\n      </tr>\n\n    </tbody>\n    </table>\n\n  </form>\n  `,\n    buttons: {\n      apply: {\n        icon: \"<i class='fas fa-check-circle'></i>\",\n        label: labelapply,\n        callback: () => {\n          applyChanges = true;\n        },\n      },\n      cancel: {\n        icon: \"<i class='fas fa-times-circle'></i>\",\n        label: labelcancel,\n        callback: () => {\n          applyChanges = false;\n        },\n      },\n    },\n    default: \"apply\",\n    close: async (html) => {\n      if (applyChanges) {\n        let facespath = html.find('[name=\"facespath\"]')[0].value || \"\";\n        let backspath = html.find('[name=\"backspath\"]')[0].value || \"\";\n        let deckname = html.find('[name=\"deckname\"]')[0].value || \"\";\n        let cardtype = html.find('[name=\"cardtype\"]')[0].value || \"base\";\n        let nameback = html.find('[name=\"nameback\"]')[0].value || \"Card back\";\n        let deckback =\n          html.find('[name=\"deckback\"]')[0].value || \"icons/svg/card-hand.svg\";\n\n        //console.log(\"Faces: \" + facespath);\n        //console.log(\"Backs: \" + backspath);\n        //console.log(\"Deck: \" + deckname);\n        //console.log(\"Name: \" + nameback);\n        if (facespath === \"\" || backspath === \"\" || deckname === \"\") {\n          console.log(\"Error in paths or deck name\");\n        } else {\n          //console.log(repeat([1, 2, 3], 7));\n          //console.log(repeat([1, 2, 3], 2));\n\n          let facecards = await getFiles(\n            facespath,\n            (extensions = [`.jpg`, `.jpeg`, `.png`, `.webp`])\n          );\n          let backcards1 = await getFiles(\n            backspath,\n            (extensions = [`.jpg`, `.jpeg`, `.png`, `.webp`])\n          );\n          let backcards = repeat(backcards1, facecards.length);\n          //console.log(facecards);\n          //console.log(backcards);\n\n          let deck = game.cards.getName(deckname);\n          deck.update({ img: deckback });\n\n          let newcardsdef = [];\n          let cardName;\n          let faceName;\n          let backName;\n\n          for (let i = 0; i < facecards.length; i++) {\n            faceName = facecards[i];\n            backName = backcards[i];\n            cardName = decodeURIComponent(\n              strip_extension(basename(faceName, \"/\"))\n            );\n            //console.log(cardName);\n\n            newcardsdef.push({\n              name: cardName,\n              origin: deck.id,\n              description: cardName,\n              type: cardtype,\n              back: { img: backName, name: nameback },\n              faces: [{ img: faceName, name: cardName }],\n              face: 0,\n            });\n          }\n          //console.log(newcardsdef);\n\n          deck.createEmbeddedDocuments(\"Card\", newcardsdef);\n        }\n      }\n    },\n  },\n  myDialogOptions\n).render(true);","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"exportSource":{"world":"pruebasrqg","system":"rqg","coreVersion":"9.241","systemVersion":"1.12.0"},"core":{"sourceId":"Macro.BrNB5O7zV1airjPX"}},"_id":"dkONf3OPBLscx6fp"}
{"name":"Table Rolls","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/weapons/thrown/bomb-metal-brown.webp","scope":"global","command":"//\n// Table Rolls (Generic) v1.2\n// by Viriato139ac\n\nconst myDialogOptions = {\n  width: 640,\n  //height: 800,\n  //top: 500,\n  //left: 500\n};\n\ntableRolls();\n\nfunction tableRolls() {\n  const tableOptions = game.tables.filter(a => a.permission > 0).reduce(\n    (a, b) => (a += `<option value=\"${b.name}\">${b.name}</option>`),\n    ``\n  );\n\n  const content = `\n    <form>\n    <table class=\"paleBlueRows\">\n    <tbody>\n    <tr>\n    <td colspan=\"1\">Table</td>\n    <td colspan=\"3\" style=\"font-weight: bold;\"><select name=\"selectedTable\">${tableOptions}</select></td>\n    </tr>\n    </tbody>\n    </table>\n    </form>`;\n\n  new Dialog(\n    {\n      title: \"Table Rolls (Generic)\",\n      content,\n      buttons: {\n        play: {\n          label: \"Roll\",\n          callback: async (html) => {\n            const selectedTable = html.find(`[name=\"selectedTable\"]`).val();\n            const table = game.tables.getName(selectedTable);\n            let charRoll = await new Roll(table.data.formula);\n            charRoll.roll();\n            let flavourString = `Draws a result from the <span style=\"font-weight: bold;color: brown\">${table.name}</span> table`;\n            let contentString = `\n              <hr>\n              <table>\n              <tr>\n                  <th style=\"text-align: center; vertical-align: middle;\">Formula</th>\n                  <th style=\"text-align: center; vertical-align: middle;\">Result</th>\n              </tr>\n              <tr>\n              <td style=\"text-align: center; vertical-align: middle;\">${\n                table.data.formula\n              }</td>\n              <td style=\"text-align: center; vertical-align: middle;\">${\n                charRoll.result\n              }</td>\n              </tr>\n              </table>\n              <hr>\n              ${table.getResultsForRoll(charRoll.result)[0].data.text}\n              <hr>\n              `;\n\n            charRoll.toMessage({\n              user: game.user.id,\n              speaker: ChatMessage.getSpeaker(),\n              flavor: flavourString,\n              content: contentString,\n            });\n          },\n        },\n        cancel: {\n          label: \"Cancel\",\n          callback: (html) => console.log(\"Cancelled\"),\n        },\n      },\n      default: \"play\",\n    },\n    myDialogOptions\n  ).render(true);\n}","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"exportSource":{"world":"pruebasrqg","system":"rqg","coreVersion":"9.242","systemVersion":"1.12.0"},"core":{"sourceId":"Macro.wgLUh20C37G0olUy"}},"_id":"fiddlEkXiOZhvnbw"}
{"name":"Characteristic Rolls","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/sundries/gaming/dice-runed-brown.webp","scope":"global","command":"//\n// Characteristic Rolls (RQG) v1.2\n// by Viriato139ac\n// thanks to Freeze#2689 for the conditional selection code\n\nfunction nivelexito(diceResult, skillLevel) {\n  let uc = Math.max(1, Math.round(skillLevel / 20));\n  let us = Math.max(1, Math.round(skillLevel / 5));\n  let uf = 95 + Math.min(4, Math.max(0, Math.ceil((skillLevel - 10) / 20)));\n  let ue = Math.min(skillLevel, uf);\n  let niveles = [uc, us, ue, uf];\n  //console.log(niveles);\n  let levelResult =\n    4 - niveles.reduce((a, b) => a + (diceResult <= b ? 1 : 0), 0);\n  //console.log(levelResult);\n  return levelResult;\n}\n\nconst lvlColours = [\"goldenrod\", \"blue\", \"green\", \"red\", \"darkred\"];\n//const lvlNames = [\"Critical\", \"Special\", \"Success\", \"Failure\", \"Fumble\"];\nconst lvlNames = [\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.2\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.3\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.4\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.5\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.6\")}`,\n];\n\nconst rollMultipliers = [\n  {\n    mult: 5,\n    desc: `${game.i18n.localize(\n      \"RQG.scripts.characteristicRolls.difficultyEnum.1\"\n    )}`,\n  },\n  {\n    mult: 4,\n    desc: `${game.i18n.localize(\n      \"RQG.scripts.characteristicRolls.difficultyEnum.2\"\n    )}`,\n  },\n  {\n    mult: 3,\n    desc: `${game.i18n.localize(\n      \"RQG.scripts.characteristicRolls.difficultyEnum.3\"\n    )}`,\n  },\n  {\n    mult: 2,\n    desc: `${game.i18n.localize(\n      \"RQG.scripts.characteristicRolls.difficultyEnum.4\"\n    )}`,\n  },\n  {\n    mult: 1,\n    desc: `${game.i18n.localize(\n      \"RQG.scripts.characteristicRolls.difficultyEnum.5\"\n    )}`,\n  },\n  {\n    mult: 0.5,\n    desc: `${game.i18n.localize(\n      \"RQG.scripts.characteristicRolls.difficultyEnum.6\"\n    )}`,\n  },\n];\n\nconst myDialogOptions = {\n  width: 640,\n  //height: 800,\n  //top: 500,\n  //left: 500\n};\n\nconst characteristics = {\n  strength: `${game.i18n.localize(\"RQG.Actor.Characteristics.strength-full\")}`,\n  constitution: `${game.i18n.localize(\n    \"RQG.Actor.Characteristics.constitution-full\"\n  )}`,\n  size: `${game.i18n.localize(\"RQG.Actor.Characteristics.size-full\")}`,\n  dexterity: `${game.i18n.localize(\n    \"RQG.Actor.Characteristics.dexterity-full\"\n  )}`,\n  intelligence: `${game.i18n.localize(\n    \"RQG.Actor.Characteristics.intelligence-full\"\n  )}`,\n  power: `${game.i18n.localize(\"RQG.Actor.Characteristics.power-full\")}`,\n  charisma: `${game.i18n.localize(\"RQG.Actor.Characteristics.charisma-full\")}`,\n};\n\ncharacteristicRolls();\n\nfunction characteristicRolls() {\n  if (canvas.tokens.controlled.length === 0) {\n    ui.notifications.error(\n      `${game.i18n.localize(\"RQG.scripts.general.errorselect\")}`\n    );\n    return;\n  }\n\n  const charOptions = Object.getOwnPropertyNames(\n    token.actor.data.data.characteristics\n  ).reduce(\n    (a, b) =>\n      (a += `<option value=\"${b}\">` + characteristics[`${b}`] + `</option>`),\n    ``\n  );\n\n  const multOptions = rollMultipliers.reduce(\n    (a, b) => (a += `<option value=\"${b.mult}\">${b.desc}</option>`),\n    ``\n  );\n\n  const content = `\n    <form>\n    <table class=\"paleBlueRows\">\n    <thead>\n    <tr>\n    <th colspan=\"2\"></th>\n    <th colspan=\"3\">${game.i18n.localize(\n      \"RQG.scripts.general.characteristic\"\n    )}</th>\n    <th colspan=\"1\">${game.i18n.localize(\"RQG.scripts.general.value\")}</th>\n    <th colspan=\"3\">${game.i18n.localize(\n      \"RQG.scripts.characteristicRolls.difficulty\"\n    )}</th>\n    <th colspan=\"1\">${game.i18n.localize(\"RQG.scripts.general.modifier\")}</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n    <td colspan=\"2\" style=\"font-weight: bold;\">Target:</td>\n    <td colspan=\"3\" style=\"font-weight: bold;\"><select name=\"charNam\">${charOptions}</select></td>\n    <td colspan=\"1\"><input type=\"number\" id=\"charVal\" name=\"charVal\" value=0></td>\n    <td colspan=\"3\" style=\"font-weight: bold;\"><select name=\"charMul\">${multOptions}</select></td>\n    <td colspan=\"1\"><input type=\"number\" id=\"charMod\" name=\"charMod\" value=0></td>\n    </tr>\n    </tbody>\n    </table>\n    </form>`;\n\n  new Dialog(\n    {\n      title: `${game.i18n.localize(\"RQG.scripts.characteristicRolls.title\")}`,\n      content,\n      buttons: {\n        roll: {\n          label: `${game.i18n.localize(\"RQG.scripts.general.roll\")}`,\n          callback: async (html) => {\n            const charNam = html.find(`[name=\"charNam\"]`).val();\n            const charVal = html.find(`[name=\"charVal\"]`).val();\n            const charMod = html.find(`[name=\"charMod\"]`).val();\n            const charMul = html.find(`[name=\"charMul\"]`).val();\n\n            let charValue = Math.max(1, charVal * charMul + charMod * 1);\n            let charRoll = new Roll(\"1d100\");\n            charRoll.roll();\n            let charResult = nivelexito(charRoll.result, charValue);\n\n            console.log(\n              \"char: Rolled \" +\n                charRoll.result +\n                \" on \" +\n                charValue +\n                \" Result: \" +\n                lvlNames[charResult]\n            );\n\n            let charLabel =\n              `<span style=\"font-weight: bold; color:` +\n              lvlColours[charResult] +\n              `;\">` +\n              lvlNames[charResult] +\n              `</span>`;\n\n            let flavourString = `${game.i18n.format(\n              \"RQG.scripts.characteristicRolls.flavourString\",\n              {\n                charNam: characteristics[`${charNam}`],\n                charVal: charVal,\n                charMul: charMul,\n                charRoll: charRoll.result,\n                charValue: charValue,\n                charLabel: charLabel,\n              }\n            )}`;\n            // let flavourString = `Rolling <span style=\"font-weight: bold;color: brown\">${charNam} (${charVal} x ${charMul})</span>. Rolled ${charRoll.result}% on a modified probability of ${charValue}%, a ${charLabel}`;\n            let contentString = `<table>\n              <tr>\n                  <th>${game.i18n.localize(\"RQG.scripts.general.value\")}</th>\n                  <th>${game.i18n.localize(\"RQG.scripts.general.mod\")}</th>\n                  <th>${game.i18n.localize(\"RQG.scripts.general.rollp\")}</th>\n                  <th>${game.i18n.localize(\"RQG.scripts.general.result\")}</th> \n              </tr>\n              <tr>\n              <td style=\"text-align: center; vertical-align: middle;\">${charVal} (x${charMul})</td>\n              <td style=\"text-align: center; vertical-align: middle;\">${charMod}</td>\n              <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${\n                charRoll.result\n              } (${charValue})</td>\n              <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${charLabel}</td>\n              </tr>\n              </table>`;\n\n            charRoll.toMessage({\n              user: game.user.id,\n              speaker: ChatMessage.getSpeaker(),\n              //flavor: `Augmenting ${skillName} (${skillBase}%) with ${augName} (${augBase}%). Rolled ${skillRoll.result}% on a modified skill of ${skillValue}%, a ${lvlNames[skillResult]}`,\n              flavor: flavourString,\n              content: contentString,\n            });\n          },\n        },\n        cancel: {\n          label: `${game.i18n.localize(\"RQG.scripts.general.cancel\")}`,\n          callback: (html) => console.log(\"Cancelled\"),\n        },\n      },\n      default: \"roll\",\n    },\n    myDialogOptions\n  ).render(true);\n}\n\nawait new Promise((resolve) => setTimeout(resolve, 250));\n$(document).ready(function () {\n  const firstcharOptions =\n    token.actor.data.data.characteristics[$(\"select[name=charNam]\")[0].value]\n      .value;\n  console.log(\n    \"R: \" + $(\"select[name=charNam]\")[0].value + \": \" + firstcharOptions\n  );\n  $(\"input[name=charVal]\").val(firstcharOptions);\n  $(\"select[name=charNam]\").change(function () {\n    const newcharOptions =\n      token.actor.data.data.characteristics[$(\"select[name=charNam]\")[0].value]\n        .value;\n    console.log(\n      \"C: \" + $(\"select[name=charNam]\")[0].value + \": \" + newcharOptions\n    );\n    $(\"input[name=charVal]\").val(newcharOptions);\n  });\n});","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"core":{"sourceId":"Macro.ANRk1JrF87xQGQe9"},"exportSource":{"world":"pruebasrqg","system":"rqg","coreVersion":"9.242","systemVersion":"1.12.0"}},"_id":"hRqRtC31l3MynEgL"}
{"name":"Data Load","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/magic/acid/dissolve-arm-flesh.webp","scope":"global","command":"// data being sent to your players when they load in\n\nlet a = JSON.stringify(game.actors).length\nlet b = JSON.stringify(game.journal).length\nlet c = JSON.stringify(game.scenes).length\nlet d = JSON.stringify(game.items).length\nlet e = JSON.stringify(game.playlists).length\nlet f = JSON.stringify(ui.chat.collection).length\nui.notifications.notify((a+b+c+d+e+f)/1000)","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"exportSource":{"world":"pruebasrqg","system":"rqg","coreVersion":"9.242","systemVersion":"1.12.0"},"core":{"sourceId":"Macro.E2Qt2u9t5yQA8FzX"}},"_id":"lcGbwzSBG4aa3AEE"}
{"name":"Augmenting Abilities","type":"script","author":"IWsOZbkFTpNYhEwx","img":"icons/skills/social/diplomacy-peace-alliance.webp","scope":"global","command":"//\n// Augmenting Abilities (RQG) v1.2\n// by Viriato139ac\n// thanks to Freeze#2689 for the conditional selection code\n\nfunction nivelexito(diceResult, skillLevel) {\n  let uc = Math.max(1, Math.round(skillLevel / 20));\n  let us = Math.max(1, Math.round(skillLevel / 5));\n  let uf = 95 + Math.min(4, Math.max(0, Math.ceil((skillLevel - 10) / 20)));\n  let ue = Math.min(skillLevel, uf);\n  let niveles = [uc, us, ue, uf];\n  //console.log(niveles);\n  let levelResult =\n    4 - niveles.reduce((a, b) => a + (diceResult <= b ? 1 : 0), 0);\n  //console.log(levelResult);\n  return levelResult;\n}\n\nconst augChances = [50, 30, 20, -20, -50];\nconst lvlColours = [\"goldenrod\", \"blue\", \"green\", \"red\", \"darkred\"];\n//const lvlNames = [\"Critical\", \"Special\", \"Success\", \"Failure\", \"Fumble\"];\nconst lvlNames = [\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.2\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.3\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.4\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.5\")}`,\n  `${game.i18n.localize(\"RQG.Game.ResultEnum.6\")}`,\n];\n\nconst typeArray = [\n  { name: \"rune\", desc: `${game.i18n.localize(\"ITEM.TypeRune\")}` },\n  { name: \"skill\", desc: `${game.i18n.localize(\"ITEM.TypeSkill\")}` },\n  { name: \"passion\", desc: `${game.i18n.localize(\"ITEM.TypePassion\")}` },\n];\nconst typeOptions = typeArray.reduce(\n  (a, b) => (a += `<option value=\"${b.name}\">${b.desc}</option>`),\n  ``\n);\n\nconst myDialogOptions = {\n  width: 640,\n  //height: 800,\n  //top: 500,\n  //left: 500\n};\n\nconst content = `\n  <form>\n  <table class=\"paleBlueRows\">\n  <thead>\n  <tr>\n  <th colspan=\"2\">${game.i18n.localize(\"RQG.scripts.general.select\")}</th>\n  <th colspan=\"2\">${game.i18n.localize(\"RQG.scripts.general.type\")}</th>\n  <th colspan=\"5\">${game.i18n.localize(\"RQG.scripts.general.ability\")}</th>\n  <th colspan=\"1\">${game.i18n.localize(\"RQG.scripts.general.modifier\")}</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td colspan=\"2\" style=\"font-weight: bold;\">${game.i18n.localize(\n    \"RQG.scripts.augmentingAbilities.augmenting\"\n  )}:</td>\n  <td colspan=\"2\" style=\"font-weight: bold;\"><select name=\"augType\">${typeOptions}</select></td>\n  <td colspan=\"5\"><select name=\"augName\"></select></td>\n  <td colspan=\"1\"><input type=\"number\" id=\"augMod\" name=\"augMod\" value=0></td>\n  </tr>\n  <tr>\n  <td colspan=\"2\" style=\"font-weight: bold;\">${game.i18n.localize(\n    \"RQG.scripts.augmentingAbilities.augmented\"\n  )}:</td>\n  <td colspan=\"2\" style=\"font-weight: bold;\"><select name=\"skillType\">${typeOptions}</select></td>\n  <td colspan=\"5\"><select name=\"skillName\"></select></td>\n  <td colspan=\"1\"><input type=\"number\" id=\"skillMod\" name=\"skillMod\" value=0></td>\n  </tr>\n  </tbody>\n  </table>\n  </form>`;\n\naugmentingAbilities();\n\nfunction augmentingAbilities() {\n  if (canvas.tokens.controlled.length === 0) {\n    ui.notifications.error(\n      `${game.i18n.localize(\"RQG.scripts.general.errorselect\")}`\n    );\n    return;\n  }\n\n  new Dialog(\n    {\n      title: `${game.i18n.localize(\"RQG.scripts.augmentingAbilities.title\")}`,\n      content,\n      buttons: {\n        roll: {\n          label: `${game.i18n.localize(\"RQG.scripts.general.roll\")}`,\n          callback: async (html) => {\n            const augName = html.find(`[name=\"augName\"]`).val();\n            const augToRoll = token.actor.items.find((i) => i.name === augName);\n            const augMod = html.find(`[name=\"augMod\"]`).val();\n\n            let augBase;\n            augToRoll.data.type === \"skill\"\n              ? (augBase =\n                  augToRoll.data.data.learnedChance +\n                  token.actor.data.data.skillCategoryModifiers[\n                    augToRoll.data.data.category\n                  ])\n              : (augBase = augToRoll.data.data.chance);\n            let augValue = Math.max(1, augBase * 1 + augMod * 1);\n            console.log(augBase);\n            let augRoll = new Roll(\"1d100\");\n            augRoll.roll();\n            let augResult = nivelexito(augRoll.result, augValue);\n            console.log(\n              \"Aug: Rolled \" +\n                augRoll.result +\n                \" on \" +\n                augValue +\n                \" Result: \" +\n                lvlNames[augResult] +\n                \": \" +\n                augChances[augResult]\n            );\n\n            const skillName = html.find(`[name=\"skillName\"]`).val();\n            const skillToRoll = token.actor.items.find(\n              (i) => i.name === skillName\n            );\n            const skillMod = html.find(`[name=\"skillMod\"]`).val();\n\n            let skillBase;\n            skillToRoll.data.type === \"skill\"\n              ? (skillBase =\n                  skillToRoll.data.data.learnedChance +\n                  token.actor.data.data.skillCategoryModifiers[\n                    skillToRoll.data.data.category\n                  ])\n              : (skillBase = skillToRoll.data.data.chance);\n            let skillValue = Math.max(\n              1,\n              skillBase * 1 + augChances[augResult] * 1 + skillMod * 1\n            );\n            let skillRoll = new Roll(\"1d100\");\n            skillRoll.roll();\n            let skillResult = nivelexito(skillRoll.result, skillValue);\n            console.log(\n              \"Ski: Rolled \" +\n                skillRoll.result +\n                \" on \" +\n                skillValue +\n                \" Result: \" +\n                lvlNames[skillResult]\n            );\n\n            //let augLabel = `<span style=\"font-weight: bold; color:` + lvlColours[augResult] + `;\">` + lvlNames[augResult] + ` (` + augChances[augResult] + `)</span>`;\n            let augLabel =\n              `<span style=\"font-weight: bold; color:` +\n              lvlColours[augResult] +\n              `;\">` +\n              lvlNames[augResult] +\n              `</span>`;\n            let skillLabel =\n              `<span style=\"font-weight: bold; color:` +\n              lvlColours[skillResult] +\n              `;\">` +\n              lvlNames[skillResult] +\n              `</span>`;\n\n            let augFlavour = `${game.i18n.format(\n              \"RQG.scripts.augmentingAbilities.augFlavour\",\n              {\n                augName: augName,\n                augBase: augBase,\n                augRoll: augRoll.result,\n                augValue: augValue,\n                augLabel: augLabel,\n              }\n            )}`;\n            //let augFlavour = `Using <span style=\"font-weight: bold;color: brown\">${augName} (${augBase}%)</span> for augmentation. Rolled ${augRoll.result}% on a modified skill of ${augValue}%, a ${augLabel}`;\n            let augString = `<table>\n            <tr>\n                <th></th>\n                <th>${game.i18n.localize(\n                  \"RQG.scripts.augmentingAbilities.base\"\n                )}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.mod\")}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.rollp\")}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.result\")}</th> \n            </tr>\n            <tr>\n            <td style=\"font-weight: bold;\">${game.i18n.localize(\n              \"RQG.scripts.augmentingAbilities.augmenting\"\n            )}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${augBase}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${augMod}</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${\n              augRoll.result\n            } (${augValue})</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${augLabel}</td>\n            </tr>\n            </table>`;\n            augRoll.toMessage({\n              user: game.user.id,\n              speaker: ChatMessage.getSpeaker(),\n              //flavor: `Augmenting ${skillName} (${skillBase}%) with ${augName} (${augBase}%). Rolled ${skillRoll.result}% on a modified skill of ${skillValue}%, a ${lvlNames[skillResult]}`,\n              flavor: augFlavour,\n              content: augString,\n            });\n\n            let skillFlavour = `${game.i18n.format(\n              \"RQG.scripts.augmentingAbilities.skillFlavour\",\n              {\n                skillName: skillName,\n                skillBase: skillBase,\n                augName: augName,\n                skillRoll: skillRoll.result,\n                skillValue: skillValue,\n                skillLabel: skillLabel,\n              }\n            )}`;\n            //let skillFlavour = `Rolling <span style=\"font-weight: bold;color: brown\">${skillName} (${skillBase}%)</span> augmented with ${augName}. Rolled ${skillRoll.result}% on a modified skill of ${skillValue}%, a ${skillLabel}`;\n            let skillString = `<table>\n            <tr>\n                <th></th>\n                <th>${game.i18n.localize(\n                  \"RQG.scripts.augmentingAbilities.base\"\n                )}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.mod\")}</th>\n                <th>${game.i18n.localize(\n                  \"RQG.scripts.augmentingAbilities.aug\"\n                )}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.rollp\")}</th>\n                <th>${game.i18n.localize(\"RQG.scripts.general.result\")}</th> \n            </tr>\n            <tr>\n            <td style=\"font-weight: bold;\">${game.i18n.localize(\n              \"RQG.scripts.general.ability\"\n            )}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${skillBase}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${skillMod}</td>\n            <td style=\"text-align: center; vertical-align: middle;\">${\n              augChances[augResult]\n            }</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${\n              skillRoll.result\n            } (${skillValue})</td>\n            <td style=\"text-align: center; vertical-align: middle; font-weight: bold;\">${skillLabel}</td>\n            </tr>\n            </table>`;\n\n            skillRoll.toMessage({\n              user: game.user.id,\n              speaker: ChatMessage.getSpeaker(),\n              //flavor: `Augmenting ${skillName} (${skillBase}%) with ${augName} (${augBase}%). Rolled ${skillRoll.result}% on a modified skill of ${skillValue}%, a ${lvlNames[skillResult]}`,\n              flavor: skillFlavour,\n              content: skillString,\n            });\n          },\n        },\n        cancel: {\n          label: `${game.i18n.localize(\"RQG.scripts.general.cancel\")}`,\n          callback: (html) => console.log(\"Cancelled\"),\n        },\n      },\n      default: \"roll\",\n    },\n    myDialogOptions\n  ).render(true);\n}\n\nawait new Promise((resolve) => setTimeout(resolve, 250));\n$(document).ready(function () {\n  const firstaugOptions = token.actor.items\n    .filter((skill) => skill.type === $(\"select[name=augType]\")[0].value)\n    .reduce(\n      (acc, e) => (acc += `<option value=\"${e.name}\">${e.name}</option>`),\n      ``\n    );\n  $(\"select[name=augName]\").append(firstaugOptions);\n  $(\"select[name=augType]\").change(function () {\n    const newaugOptions = token.actor.items\n      .filter((skill) => skill.type === $(\"select[name=augType]\")[0].value)\n      .reduce(\n        (acc, e) => (acc += `<option value=\"${e.name}\">${e.name}</option>`),\n        ``\n      );\n    $(\"select[name=augName]\").empty();\n    $(\"select[name=augName]\").append(newaugOptions);\n  });\n  const firstskillOptions = token.actor.items\n    .filter((skill) => skill.type === $(\"select[name=skillType]\")[0].value)\n    .reduce(\n      (acc, e) => (acc += `<option value=\"${e.name}\">${e.name}</option>`),\n      ``\n    );\n  $(\"select[name=skillName]\").append(firstskillOptions);\n  $(\"select[name=skillType]\").change(function () {\n    const newskillOptions = token.actor.items\n      .filter((skill) => skill.type === $(\"select[name=skillType]\")[0].value)\n      .reduce(\n        (acc, e) => (acc += `<option value=\"${e.name}\">${e.name}</option>`),\n        ``\n      );\n    $(\"select[name=skillName]\").empty();\n    $(\"select[name=skillName]\").append(newskillOptions);\n  });\n});","folder":null,"sort":0,"permission":{"default":0,"IWsOZbkFTpNYhEwx":3},"flags":{"core":{"sourceId":"Macro.TjQ6IFeMLwkyZvya"},"exportSource":{"world":"pruebasrqg","system":"rqg","coreVersion":"9.242","systemVersion":"1.12.0"}},"_id":"xW9yN71I8STvRreJ"}
